# Revision history
# 2021.04.01 LN update to create test data and to estimate
#
# Frequently changing options
#  Name of output directory
OutDir : /home/uctpln0/Scratch/FruitDemand/output/2021.Test1
InputDir: /home/uctpln0/FruitDemand/code/fortran/inputs/Test1
TestLikeFlag : 4     # 0 = maximise likelihood
                     # 1 = test likelihood gradient
                     # 2 = plot likelihood
                     # 3 = test non-linear constraint
                     # 4 = no non-linear constraints
                     # 5 = only compute hessian
                     # 6 = analyse results
BICFlag          : 0 # 1 to minimize BIC
SimulateDataFlag : 1 # 1 simulate data, 0 = load data from file
HotStart         : 1 # 1 to do HotStart, from previous saved output

# Flags
ComputeHessFlag     : 0  # 1 = compute hessian. 2 = load gradLHH and compute hessian
OutputFlag          : 0     # 0 don't print output and 1 to print output
SaveDataFlag        : 0     # 1 to save data, 0 otherwise
TestIntegrationFlag : 0 # 1 to test accuracy of integration
SimulateDataFlag    : 0 # 1 simulate data, 0 = load data from file
MPIFlag             : 1 # 1 = each processor, subset of data
                        # 2 = each processor, subset of MC replications
 
InitialModel : 2    # first model to estimate
FinalModel   : 2    # last model to estimate
small        : 1.0d-50     # small number to prevent log of zero
#
# Problem size
# NMC   = number of Monte Carlo repetitions
# N     = number of observations
# NSIM  = number of simulations
# M     = number of markets
# J     = number of products
# K     = dimension of demand system
NMC   : 1
N     : 1000
NSIM  : 1000
M     : 1000
J     : 3
K     : 2

RawData_FILE  :  /home/uctpln0/Scratch/FruitDemand/data/Fruit20171109B.csv
nRawVars      : 90  # number of variables in raw data file
RawDataFormat : 20171109 # 1 = pre-2016 format
                         # 2 = 20161225 format
                         # 20171109 = 20171109 format
NewData_FILE  : temp/temp.csv
Summary_FILE  : SumStats.tex
Results1_FILE : Results1.txt
Results2_FILE : Results2.txt
Hess1_FILE    : Hess1.txt
Hess2_FILE    : Hess2.txt
Scaling_FILE : ScalingMatrix.txt
Timing1_FILE : Timing1.txt
Timing2_FILE : Timing2.txt
InitialGuess1_FILE : InitialGuess1.txt
InitialGuess2_FILE : InitialGuess2.txt

# Simulation and estimation seeds
SimulationSeed : 1
EstimationSeed : 1

#            : 01
MaxAlgorithm : 1 # 1 = E04WDF gradient based, dense
                 # 2 = E04VHF gradient based,sparse
                 # 3 = E04JCF,non-gradient based
                 # 4 = E04JYF, 5 = E04CBF
                 # 6 = Bayes MC integration
AbsoluteTolerance : 0.01  # absolute tolerance for D01ESF for Bayesian computation   
RelativeTolerance : 0.01  # relative tolerance for D01ESF for Bayesian computation   
MaxLevel          : 6     # maximum level for D01ESF for Bayesian computation   
E04OptionsFile    : E04WDF.opt
SaveBasisFlag     : 1     # 1 to save basis info in BasisFile
LoadBasisFlag     : 0     # 1 to load basis info from OldBasisFile
SaveBasisFreq     : 1000  # save basis file after i1 iterations
BasisFile         : basis1.txt
BackupBasisFile   : basis1.bak
OldBasisFile      : basis1.txt

# Penalty parameters
# method = 0  no penalty
#          1  max L(x1,x2) subject to x2 = xPlus-xMinus, xPlus>=0, xMinus>=0
method : 0
nx1    : 0
lambda : 0.0001
nLambda : 2
MinLambda : 0.001
MaxLambda : 0.050

# IntegrationFlag
# 0 = Gauss Hermite
# 1 = Sparse Hermite
# 2 = Pseudo Monte Carlo
# 3 = Quasi Monte Carlo
# 6 = Gauss-Legendre on (-1,1)
# 7 = pseudo-MC on (-1,1)
#                 1 2 3 4 5 6 7 8 9 101112131415161718192021222324252627282930
#                 010101010101010101010101010101010101010101010101010101010101
IntegrationFlag : 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
# Number of quadrature nodes in each dimension
#          1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
#          012012012012012012012012012012012012012012012012012012012012012012012012012012012012012012
nQuad    : 10 10 10 10 10 5  5  5  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2 
# nQuadAll : total number of quadrature nodes for use when flag ==2,3,or 7
#
#          1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30
#          012301230123012301230123012301230123012301230123012301230123012301230123012301230123012301230123012301230123012301230123 
nQuadAll : 200 200 200 200 200 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100

model : 2    # 1 for baseline, 2 = random coefficients

# parameters for random matrix B
# Integration rule for random B
RandomB_flag : 0   # same coding as IntegrationFlag
RandomB_nall : 100 # total number of quadrature nodes for use when flag =2,3, or 7
dim_eta : 2        # dimension of random coefficients in (BC,BD)

#  RandomB_nQuad = number of points in each dimension
#                1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
#                123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123 
RandomB_nQuad :  7  7  5  5  5  5  5  5  5  5  3  3  3  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2     

# parameter for RC model
# BC_z_dim = size(BC_z)    C = Z(k,j) * gamma0 + eta' * gamma2
# BD_z_dim = size(BD_z)    D = Z(j) * beta0 + eta' * beta2 
BC_z_dim : 7 # default BC_z_dim = (K-1)*(J - K/2)
BD_z_dim : 5 # default BD_z_dim = J
BC_lo : 0.10   # minimum value of BC  (ensures B matrix has rank K for all eta)
BC_hi : 0.90   # maximum value of BC
BC_beta_lo : -4.0d0
BC_beta_hi : 4.5d0
BC_CDiag_lo : 0.0001d0
BC_CDiag_hi : 3.5d0
BD_beta_lo : -4.0d0
BD_beta_hi : 4.5d0
BD_CDiag_lo : 0.0001d0
BD_CDiag_hi : 3.5d0
InvCDiag_LO : 0.2d0  # BL = InvCDiag_LO
InvCDiag_HI : 2.5d0  # BU = x + InvCDiag_HI
InvCOffDiag_LO : 0.03d0   # BL = pi * InvCOffDiag_LO
InvCOffDiag_HI : 0.97d0  # BU = pi * InvCOffDiag_HI
BD_month_lo : -3.0d0
BD_month_hi : 3.0d0

# select subsets of parameter to be free
FreeFlagD           : 0   # 1 to be free, 0 to be fixed
FreeFlagBC          : 0   # 1 to be free, 0 to be fixed
FreeFlagMUE         : 1   # 1 to be free, 0 to be fixed
FreeFlagMUE_month   : 1   # 1 to be free, 0 to be fixed
FreeFlagInvCDiag    : 1   # 1 to be free, 0 to be fixed
FreeFlagInvCOffDiag : 1   # 1 to be free, 0 to be fixed

FreeFlagBD_beta     : 1 
FreeFlagBD_CDiag    : 1      
FreeFlagBD_COffDiag : 1     
FreeFlagBC_beta     : 1     
FreeFlagBC_CDiag    : 1 
FreeFlagBC_COffDiag : 1   
FreeFlagBD_month    : 1
OneAtATime          : 0

# index of first free element of vector
free_mue1         : 1   #5
free_mue_month1   : 1   #55
free_cdiag1       : 1   #5
free_coffdiag1    : 1   #10
free_bc_beta1     : 1   #98
free_bc_cdiag1    : 1   #98
free_bc_coffdiag1 : 1   #97
free_bd_beta1     : 1   #27
free_bd_cdiag1    : 1   #27
free_bd_coffdiag1 : 1   #26
free_bd_month1    : 1   #27*11

# Parameter file names
MUE_FILE : rawparms/MUE.raw
INVCDIAG_FILE : rawparms/INVCDiag.raw
INVCOFFDIAG_FILE : rawparms/INVCOffDiag.raw
C_FILE : rawparms/C.raw
D_FILE : rawparms/D.raw
BC_BETA_FILE : rawparms/BC_beta.raw
BC_CDIAG_FILE : rawparms/BC_CDiag.raw
BC_COFFDIAG_FILE : rawparms/BC_COffDiag.raw
BD_BETA_FILE : rawparms/BD_beta.raw
BD_CDIAG_FILE : rawparms/BD_CDiag.raw
BD_COFFDIAG_FILE : rawparms/BD_COffDiag.raw
SIGP_FILE        : rawparms/sigp.raw
BC_Z_FILE        : rawparms/BC_Z.raw
BD_Z_FILE        : rawparms/BD_Z.raw

BasePriceFile : rawparms/BasePrice.raw
TaxParmsFile  : rawparms/taxparms.csv
nPrices_plot  : 30   # number of prices for demand plotting

# Determine which blocks of hessian to compute
# used in ComputeHess2
# nHess0 = start computation from x(nHess0)
# nHess1 = stop computation after x(minval(nx,nHess1))
nHess0 : 1      
nHess1 : 0    # if 0 nHess1 = nx
